/*csslint outline-none:false*/

/**
 * @see https://github.com/vaadin/web-components/blob/23.2/packages/button/theme/lumo/vaadin-button-styles.js
 */
.button {
    font-family: var(--lumo-font-family);
    font-size: var(--lumo-font-size-m);
    font-weight: 500;
    padding: 0 calc(var(--lumo-button-size) / 3 + var(--lumo-border-radius-m) / 2);
    margin: var(--lumo-space-xs) 0;
    height: var(--lumo-button-size);
    min-width: calc(var(--lumo-button-size) * 2);
    color: var(--_lumo-button-color, var(--lumo-primary-text-color));
    border: none rgba(0, 0, 0, 0);
    background-color: var(--_lumo-button-background-color, var(--lumo-contrast-5pct));
    text-decoration: none;
    border-radius: var(--lumo-border-radius-m);
}

.button[theme~='small'] {
    font-size: var(--lumo-font-size-s);
    --lumo-button-size: var(--lumo-size-s);
}

.button[theme~='large'] {
    font-size: var(--lumo-font-size-l);
    --lumo-button-size: var(--lumo-size-l);
}

/* Hover */
@media (any-hover: hover) {
    .button:hover::before {
        opacity: 0.02;
    }
}

/* Active */
.button::after {
    transition: opacity 1.4s, transform 0.1s;
    filter: blur(8px);
}
.button[active]::before {
    opacity: 0.05;
    transition-duration: 0s;
}
.button[active]::after {
    opacity: 0.1;
    transition-duration: 0s, 0s;
    transform: scale(0);
}

/* Keyboard focus */
.button[focus-ring] {
    box-shadow: 0 0 0 2px var(--lumo-primary-color-50pct);
}
.button[theme~='primary'][focus-ring] {
    box-shadow: 0 0 0 1px var(--lumo-base-color), 0 0 0 3px var(--lumo-primary-color-50pct);
}

/* Types (primary, tertiary, tertiary-inline */
.button[theme~='tertiary'],
.button[theme~='tertiary-inline'] {
    background-color: transparent !important;
    min-width: 0;
}
.button[theme~='tertiary'] {
    padding: 0 calc(var(--lumo-button-size) / 6);
}
.button[theme~='tertiary-inline']::before {
    display: none;
}
.button[theme~='tertiary-inline'] {
    margin: 0;
    height: auto;
    padding: 0;
    line-height: inherit;
    font-size: inherit;
}
.button[theme~='primary'] {
    background-color: var(--_lumo-button-primary-background-color, var(--lumo-primary-color));
    color: var(--_lumo-button-primary-color, var(--lumo-primary-contrast-color));
    font-weight: 600;
    min-width: calc(var(--lumo-button-size) * 2.5);
}
.button[theme~='primary']::before {
    background-color: black;
}
@media (any-hover: hover) {
    .button[theme~='primary']:hover::before {
        opacity: 0.05;
    }
}
.button[theme~='primary'][active]::before {
    opacity: 0.1;
}
.button[theme~='primary'][active]::after {
    opacity: 0.2;
}

/* Colors (success, error, contrast) */
.button[theme~='success'] {
    color: var(--lumo-success-text-color);
}
.button[theme~='success'][theme~='primary'] {
    background-color: var(--lumo-success-color);
    color: var(--lumo-success-contrast-color);
}
.button[theme~='error'] {
    color: var(--lumo-error-text-color);
}
.button[theme~='error'][theme~='primary'] {
    background-color: var(--lumo-error-color);
    color: var(--lumo-error-contrast-color);
}
.button[theme~='contrast'] {
    color: var(--lumo-contrast);
}
.button[theme~='contrast'][theme~='primary'] {
    background-color: var(--lumo-contrast);
    color: var(--lumo-base-color);
}
/* Disabled state. Keep selectors after other color variants. */
.button[disabled] {
    pointer-events: none;
    color: var(--lumo-disabled-text-color);
}
.button[theme~='primary'][disabled] {
    background-color: var(--lumo-contrast-30pct);
    color: var(--lumo-base-color);
}

/* Icons */
.button > vaadin-icon {
    display: inline-block;
    width: var(--lumo-icon-size-m);
    height: var(--lumo-icon-size-m);
    padding: 0.25em;
    box-sizing: border-box !important;
}

/* Icon-only */
.button[theme~='icon']:not([theme~='tertiary-inline']) {
    min-width: var(--lumo-button-size);
    padding-left: calc(var(--lumo-button-size) / 4);
    padding-right: calc(var(--lumo-button-size) / 4);
}

/* Button Groups */
.button-group .button {
    margin: 0;
    border-radius: 0;
    border-right: 1px solid rgba(0, 0, 0, 0.2);

}

.button-group .button:first-child {
    border-top-left-radius: 2px;
    border-bottom-left-radius: 2px;
}
.button-group .button:last-child {
    border-top-right-radius: 2px;
    border-bottom-right-radius: 2px;
    border-right: none;
}
